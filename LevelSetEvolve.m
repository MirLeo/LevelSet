function  newPhi = LevelSetEvolve(phi,u, v, nx,ny,dx,dy,dt)
newPhi = zeros(size(phi));
lambda = dt/(dx);


for i = 2:nx-1
    for j = 2:ny-1
        
        alpha = u(i,j) >= 0;
        beta = v(i,j) >= 0;
        
        newPhi(i,j) = phi(i,j) - ...
            lambda * u(i,j) * (alpha*(phi(i,j)-phi(i-1,j)) + (1-alpha)*(phi(i+1,j)-phi(i,j)))...
            -lambda * v(i,j) * (beta*(phi(i,j)-phi(i,j-1)) + (1-beta)*(phi(i,j+1)-phi(i,j)));
        
    end
end

% % periodic bc 
% newPhi(nx,1:ny) = phi(nx,1:ny) - ...
%     lambda * u(nx,1:ny) .* ((u(nx,1:ny)>=0).*(phi(nx,1:ny)-phi(nx-1,1:ny)) + (u(nx,1:ny)<0).*(phi(1,1:ny)-phi(nx,1:ny)))...
%             -lambda * v(nx,1:ny) .* ((v(nx,1:ny>=0)).*(phi(nx,1:ny)-[phi(nx,ny) phi(nx,1:ny-1)])+...
%             (v(nx,1:ny)<0).*([phi(nx,2:ny) phi(nx,1)]-phi(nx,1:ny)));
%         
% newPhi(1:nx,ny) = phi(1:nx,ny) - ...
%     lambda * u(1:nx,ny) .* ((u(1:nx,ny)>=0).*(phi(1:nx,ny)-[phi(nx,ny);phi(1:nx-1,ny)]) + (u(1:nx,ny)<0).*([phi(2:nx,ny);phi(1,ny)]-phi(1:nx,ny)))...
%             -lambda * v(1:nx,ny) .* ((v(1:nx,ny)>=0).*(phi(1:nx,ny)-phi(1:nx,1))+(v(1:nx,ny)<0).*(phi(1:nx,1)-phi(1:nx,ny)));
%         
% newPhi(1,1:ny) = phi(1,1:ny) - ...
%     lambda * u(1,1:ny) .* ((u(1,1:ny)>=0).*(phi(1,1:ny)-phi(nx,1:ny))+(u(1,1:ny)<0).*(phi(2,1:ny)-phi(1,1:ny)))...
%             -lambda * v(1,1:ny) .* ((v(1,1:ny)>=0).*(phi(1,1:ny)-[phi(1,ny) phi(1,1:ny-1)])+(v(1,1:ny)<0).*([phi(1,2:ny) phi(1,ny)]));
% 
%         
% newPhi(1:nx,1) = phi(1:nx,1) - ...
%     lambda * u(1:nx,1) .* ((u(1:nx,1)>=0).*(phi(1:nx,1)-[phi(nx,1);phi(1:nx-1,1)])+(u(1:nx,1)<0).*([phi(2:nx,1);phi(1,1)]-phi(1:nx,1)))...
%             -lambda * v(1:nx,1) .* ((v(1:nx,1)>=0).*(phi(1:nx,2)-phi(1:nx,1))+(v(1:nx,1)<0).*(phi(1:nx,1)-phi(1:nx,ny)));
